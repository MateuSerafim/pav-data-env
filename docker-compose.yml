services:
  pav_db:
    image: postgres:16
    env_file: .env
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h pav_db -p 5432"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    command: "azurite-blob --loose --blobHost 0.0.0.0 --blobPort 10000"
    ports:
      - "10000:10000"
    volumes:
      - azurite-data:/data
    healthcheck:
      test: ["CMD-SHELL", "nc -z azurite 10000 || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
    
  rabbitmq:
    image: rabbitmq:3-management
    env_file: .env
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  api:
    build: ./pav-data-api
    env_file: .env
    ports:
      - "8000:8000"
    depends_on:
      rabbitmq:
        condition: service_healthy
      azurite:
        condition: service_healthy
      pav_db:
        condition: service_healthy
    command: ["sh", "-c", "./entrypoint-api.sh"]

  worker:
    build: ./pav-data-worker
    env_file: .env
    depends_on:
      rabbitmq:
        condition: service_healthy
      azurite:
        condition: service_healthy
      pav_db:
        condition: service_healthy
    restart: always

volumes:
  pgdata:
  azurite-data: